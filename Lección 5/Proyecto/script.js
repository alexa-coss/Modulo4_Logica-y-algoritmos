/*
  üìå Pr√°ctica 5. Alineaci√≥n con Flexbox
  Encontrar la Palabra M√°s Larga
*/


/*
    Objetivo

Usar la t√©cnica Sliding Window para identificar la palabra m√°s larga en una cadena de texto.


Est√°s desarrollando una herramienta para ayudar a escritores a identificar la palabra m√°s larga en un texto. El
usuario ingresa un p√°rrafo, y tu tarea es encontrar esa palabra utilizando la t√©cnica Sliding Window. Este problema
simplifica la l√≥gica para que los alumnos practiquen c√≥mo manejar cadenas de texto con ventanas deslizantes.

    Instrucciones para resolver el problema:
‚Ä¢ Divide el texto en palabras individuales utilizando el m√©todo .split(' ') en la cadena.
‚Ä¢ Desliza una ventana que recorra cada palabra del arreglo y compara su longitud con la palabra m√°s larga encontrada
    hasta ese momento.
‚Ä¢ Devuelve la palabra m√°s larga al final del proceso.
‚Ä¢ Puedes consultar un extracto de c√≥digo para comenzar con la soluci√≥n, se incluye un ejmplo de lo que se espera en
    la siguiente url: https://gist.github.com/heladio-devf-mx/4adef1db05f8cd3696780b666715c8c3

    Pistas:
‚Ä¢ Usa el m√©todo .split(' ') para convertir el texto en un arreglo de palabras separadas por espacios.
‚Ä¢ Compara las longitudes de las palabras utilizando la propiedad length.
‚Ä¢ Guarda la palabra m√°s larga encontrada hasta el momento en la variable longestWord.

*/


/*
  üìå C√≥digo base

function findLongestWord(text) {
    // TODO: Dividir el texto en palabras y almacenarlas en una variable
    // const words = ...

    let longestWord = ''; // Inicializar la palabra m√°s larga

    // TODO: Recorrer el arreglo de palabras con un ciclo
    // for (...) {
        // TODO: Comparar la longitud de la palabra actual con la m√°s larga
        // if (...) {
            // Actualizar la palabra m√°s larga
            // longestWord = ...;
        // }
    // }

    // TODO: Retornar la palabra m√°s larga encontrada
    // return ...;
}

// Ejemplo de uso
const text = "JavaScript es un lenguaje de programaci√≥n incre√≠ble para aprender.";
// TODO: Llama a la funci√≥n y muestra el resultado
console.log(findLongestWord(text)); // Resultado esperado: "programaci√≥n"
*/


// 
function findLongestWord(text) {
    // TODO: Dividir el texto en palabras y almacenarlas en una variable
    const words = text.replace(/[.,!?¬ø¬°:;"(){}\[\]]/g, '').split(' ') // /.../ Caracteres a eliminar | g ‚Äúglobal‚Äù -> todos los signos, no solo el primero | '' -> Con lo que son reemplazados.

    let longestWord = ''; // Inicializar la palabra m√°s larga

    // TODO: Recorrer el arreglo de palabras con un ciclo
    for (let i=0; i < words.length; i++) {
        // TODO: Comparar la longitud de la palabra actual con la m√°s larga
        if (words[i].length > longestWord.length) {
            // Actualizar la palabra m√°s larga
            longestWord = words[i];
        }
    }

    // TODO: Retornar la palabra m√°s larga encontrada
    return longestWord;
}

// Ejemplo de uso
const text = "JavaScript es un lenguaje de programaci√≥n incre√≠ble para aprender.";

// TODO: Llama a la funci√≥n y muestra el resultado
console.log(findLongestWord(text)); // Resultado esperado: "programaci√≥n"

// Capturamos el formulario
document.getElementById('larga-form').addEventListener('submit', function(event) {
    event.preventDefault();  // Prevenir el env√≠o del formulario (que se refresque la pantalla)

    // Obtener el valor del del formulario (input)
    const texto = document.getElementById('texto').value;

    if (texto.trim() === '') {
        mostrarModal("Por favor, ingresa un texto para analizar.");
        return;
    }

    const resultado = findLongestWord(texto);

    // Mostrar secci√≥n "resultados"
    document.getElementById('resultados').style.display = 'block';

    // Actualizar <p>
    document.getElementById('texto-analizado').textContent = texto;
    document.getElementById('palabra-larga').textContent = resultado;
});

function cerrarModal() {
    document.getElementById('modal').style.display = 'none';
}